/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "TileDataSource_proxy.h"
#import "Layer_proxy.h"

/**
 * An abstract base class for all tile layers.
 */
__attribute__ ((visibility("default"))) @interface NTTileLayer : NTLayer
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Returns the data source assigned to this layer.<br>
 * @return The tile data source assigned to this layer.
 */
-(NTTileDataSource *)getDataSource;
/**
 * Returns the state of the preloading flag of this layer.<br>
 * @return True if preloading is enabled.
 */
-(BOOL)isPreloading;
/**
 * Sets the state of preloading for this layer. Preloading allows the downloading of tiles that are not<br>
 * currently visible on screen, but are adjacent to ones that are. This means that the user can pan the map without<br>
 * immediately noticing any missing tiles.<br>
 * <br>
 * Enabling this option might introduce a small performance hit on slower devices. It should also be noted that this<br>
 * will considerably increase network traffic if used with online maps. The default is false.<br>
 * @param preloading The new preloading state of the layer.
 */
-(void)setPreloading: (BOOL)preloading;
/**
 * Gets the current zoom level bias for this layer.<br>
 * @return The current zoom level bias for this layer.
 */
-(float)getZoomLevelBias;
/**
 * Sets the zoom level bias for this layer. Higher zoom level bias forces SDK to use more detailed tiles for given view compared to lower zoom bias.<br>
 * The default bias is 0.<br>
 * @param bias The new bias value, both positive and negative fractional values are supported.
 */
-(void)setZoomLevelBias: (float)bias;
/**
 * Clear layer tile caches. This will release memory allocated to tiles.<br>
 * @param all True if all tiles should be released, otherwise only preloading (invisible) tiles are released.
 */
-(void)clearTileCaches: (BOOL)all;
-(BOOL)isUpdateInProgress;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

