/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.6
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif

/**
 * The current action that describes the operation being performed with the package.
 */
enum NTPackageStatus_Action {
/**
 * Package is ready.
 */
  NTPackageStatus_READY = 0,
/**
 * Package is waiting in the task queue.
 */
  NTPackageStatus_WAITING = 1,
/**
 * Package is being downloaded.
 */
  NTPackageStatus_DOWNLOADING = 2,
/**
 * Package data is being copied.
 */
  NTPackageStatus_COPYING = 3,
/**
 * Package is being removed.
 */
  NTPackageStatus_REMOVING = 4
};

/**
 * The status of the map package. This includes information whether the package is ready, queued for processing, downloading, etc.<br>
 * Also it contains information if the package processing is paused and about the progress.
 */
__attribute__ ((visibility("default"))) @interface NTPackageStatus : NSObject
{
	void *swigCPtr;
	BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;
/**
 * Constructs a new status.<br>
 * @param action The current action being performed with the package.<br>
 * @param paused True if the action is paused.<br>
 * @param progress The progress of the operation (in the range 0..100)
 */
-(id)initWithAction: (enum NTPackageStatus_Action)action paused: (BOOL)paused progress: (float)progress;
/**
 * Returns the current action being performed.<br>
 * @return The current action being performed.
 */
-(enum NTPackageStatus_Action)getAction;
/**
 * Returns the paused state of the action.<br>
 * @return True when the action is paused, false if the action is active.
 */
-(BOOL)isPaused;
/**
 * Returns the progress of the action.<br>
 * @return The progress of the action (in the range 0..100)
 */
-(float)getProgress;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

